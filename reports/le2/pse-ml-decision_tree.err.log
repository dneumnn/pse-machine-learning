Traceback (most recent call last):
  File "/opt/homebrew/anaconda3/envs/pse-ml/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/homebrew/anaconda3/envs/pse-ml/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/homebrew/anaconda3/envs/pse-ml/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/homebrew/anaconda3/envs/pse-ml/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/homebrew/anaconda3/envs/pse-ml/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/homebrew/anaconda3/envs/pse-ml/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/homebrew/anaconda3/envs/pse-ml/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
###### generate test data ########
def random_sinus_data():
    rng = np.random.RandomState(1)
    X = np.sort(5 * rng.rand(100,1), axis=0)
    y = np.sin(X).ravel()
    y[::5] += 3 * (0.5 - rng.rand(20))
    return X, y 

x, y = random_sinus_data()

print(X.shape)
print(y.shape)

dt1 = DecisionTree(max_depth=2, tree_type=DecisionTree.TREE_TYPE_REGRESSION)
dt1.fit(X,y)
dt2 = DecisionTree(max_depth=5, tree_type=DecisionTree.TREE_TYPE_REGRESSION)
dt2.fit(X,y)
dt3 = DecisionTree(max_depth=10, tree_type=DecisionTree.TREE_TYPE_REGRESSION)
dt3.fit(X,y)


X_test = np.linspace(0,5,100).reshape(100,1)
print(X_test.shape)

y_1 = dt1.predict(X_test)
y_2 = dt2.predict(X_test)
y_3 = dt3.predict(X_test)

------------------

----- stdout -----
(20640, 8)
(100,)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mIndexError[0m                                Traceback (most recent call last)
Cell [0;32mIn[12], line 15[0m
[1;32m     12[0m [38;5;28mprint[39m(y[38;5;241m.[39mshape)
[1;32m     14[0m dt1 [38;5;241m=[39m DecisionTree(max_depth[38;5;241m=[39m[38;5;241m2[39m, tree_type[38;5;241m=[39mDecisionTree[38;5;241m.[39mTREE_TYPE_REGRESSION)
[0;32m---> 15[0m [43mdt1[49m[38;5;241;43m.[39;49m[43mfit[49m[43m([49m[43mX[49m[43m,[49m[43my[49m[43m)[49m
[1;32m     16[0m dt2 [38;5;241m=[39m DecisionTree(max_depth[38;5;241m=[39m[38;5;241m5[39m, tree_type[38;5;241m=[39mDecisionTree[38;5;241m.[39mTREE_TYPE_REGRESSION)
[1;32m     17[0m dt2[38;5;241m.[39mfit(X,y)

Cell [0;32mIn[4], line 17[0m, in [0;36mDecisionTree.fit[0;34m(self, X, y)[0m
[1;32m     15[0m [38;5;250m[39m[38;5;124;03m"""learn the tree"""[39;00m
[1;32m     16[0m [38;5;28mself[39m[38;5;241m.[39mn_features [38;5;241m=[39m X[38;5;241m.[39mshape[[38;5;241m1[39m] [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39mn_features [38;5;28;01melse[39;00m [38;5;28mmin[39m(X[38;5;241m.[39mshape[[38;5;241m1[39m], [38;5;28mself[39m[38;5;241m.[39mn_features)   
[0;32m---> 17[0m [38;5;28mself[39m[38;5;241m.[39mroot [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_grow_tree[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43my[49m[43m)[49m

Cell [0;32mIn[4], line 33[0m, in [0;36mDecisionTree._grow_tree[0;34m(self, X, y, depth)[0m
[1;32m     30[0m feature_idxs [38;5;241m=[39m np[38;5;241m.[39mrandom[38;5;241m.[39mchoice(n_features, [38;5;28mself[39m[38;5;241m.[39mn_features, replace[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[1;32m     32[0m [38;5;66;03m#find best split[39;00m
[0;32m---> 33[0m best_feature, best_threshold [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_best_split[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43mfeature_idxs[49m[43m)[49m
[1;32m     35[0m [38;5;66;03m#create child nodes[39;00m
[1;32m     36[0m left_idxs, right_idxs [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_split(X[:,best_feature], best_threshold)

Cell [0;32mIn[4], line 66[0m, in [0;36mDecisionTree._best_split[0;34m(self, X, y, feature_idxs)[0m
[1;32m     63[0m thresholds [38;5;241m=[39m np[38;5;241m.[39munique(X_column)
[1;32m     64[0m [38;5;28;01mfor[39;00m threshold [38;5;129;01min[39;00m thresholds:
[1;32m     65[0m     [38;5;66;03m# calculate the information gain[39;00m
[0;32m---> 66[0m     gain [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_information_gain[49m[43m([49m[43my[49m[43m,[49m[43m [49m[43mX_column[49m[43m,[49m[43m [49m[43mthreshold[49m[43m)[49m
[1;32m     68[0m     [38;5;28;01mif[39;00m gain [38;5;241m>[39m best_gain:
[1;32m     69[0m         best_gain [38;5;241m=[39m gain

Cell [0;32mIn[4], line 99[0m, in [0;36mDecisionTree._information_gain[0;34m(self, y, X_column, threshold)[0m
[1;32m     96[0m parent_variance [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_variance(y)
[1;32m     98[0m [38;5;66;03m#calculate the weighted average entropy of the children[39;00m
[0;32m---> 99[0m var_l, var_r [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_variance([43my[49m[43m[[49m[43mleft_idxs[49m[43m][49m), [38;5;28mself[39m[38;5;241m.[39m_variance(y[right_idxs])
[1;32m    101[0m [38;5;28;01mreturn[39;00m parent_variance [38;5;241m-[39m (n_l[38;5;241m/[39mn [38;5;241m*[39m var_l [38;5;241m+[39m n_r[38;5;241m/[39mn [38;5;241m*[39m var_r)

[0;31mIndexError[0m: index 20248 is out of bounds for axis 0 with size 100

